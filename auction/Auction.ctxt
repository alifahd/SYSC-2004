#BlueJ class context
comment0.target=Auction
comment0.text=\r\n\ A\ simple\ model\ of\ an\ auction.\r\n\ The\ auction\ maintains\ a\ list\ of\ lots\ of\ arbitrary\ length.\r\n\r\n\ @author\ David\ J.\ Barnes\ and\ Michael\ Kolling.\r\n\ @version\ 2006.03.30\r\n\r\n\ @author\ (of\ AuctionSkeleton)\ Lynn\ Marshall\r\n\ @version\ 2.0\r\n\ \r\n\ @author\ <Ali\ Ahmad\ Fahd>\r\n\ @version\ <Oct\ 5,\ 2019>\r\n\ \r\n
comment1.params=
comment1.target=Auction()
comment1.text=\r\n\ Create\ a\ new\ auction.\r\n
comment2.params=auction
comment2.target=Auction(Auction)
comment2.text=\r\n\ Constructor\ creates\ a\ new\ auction\ starting\ with\ all\ the\ lots\r\n\ that\ did\ not\ sell\ in\ the\ previous\ auction.\ If\ there\ was\ no\ previous\r\n\ auction\ then\ it\ will\ act\ as\ the\ constructor\ above\r\n\ \r\n\ *\ @param\ auction\ A\ previous\ auction.\r\n
comment3.params=description
comment3.target=boolean\ enterLot(java.lang.String)
comment3.text=\r\n\ Method\ enters\ a\ new\ lot\ into\ the\ auction\ and\ returns\ true\ or\ false\r\n\ depending\ on\ if\ the\ method\ was\ successful\ in\ implementing\ the\ new\ \r\n\ lot.\r\n\r\n\ @param\ description\ A\ description\ of\ the\ lot.\r\n
comment4.params=
comment4.target=void\ showLots()
comment4.text=\r\n\ Method\ shows\ the\ full\ list\ of\ lots\ in\ this\ auction\ in\ the\ terminal.\r\n\ Method\ checks\ to\ see\ if\ the\ list\ is\ empty\ first.\r\n
comment5.params=lotNumber\ bidder\ value
comment5.target=boolean\ bidFor(int,\ Person,\ long)
comment5.text=\r\n\ Method\ allows\ bids\ to\ be\ made\ on\ a\ lot\ number.\ The\ method\ will\r\n\ return\ true\ as\ long\ as\ the\ auction\ is\ open,\ the\ lot\ exists,\ \r\n\ the\ bidder\ exists,\ and\ the\ value\ is\ greater\ than\ 0.\r\n\r\n\ @param\ number\ The\ lot\ number\ being\ bid\ for.\r\n\ @param\ bidder\ The\ person\ bidding\ for\ the\ lot.\r\n\ @param\ value\ \ The\ value\ of\ the\ bid.\r\n
comment6.params=lotNumber
comment6.target=Lot\ getLot(int)
comment6.text=\r\n\ Method\ returns\ the\ lot\ info\ based\ on\ the\ lot\ number.\ Loops\r\n\ through\ the\ list\ to\ find\ the\ matching\ lot\ number.\ If\ the\ \r\n\ lot\ does\ not\ exist\ it\ will\ return\ null.\r\n\r\n\ @param\ lotNumber\ The\ number\ of\ the\ lot\ to\ return.\r\n\r\n\ @return\ the\ Lot\ with\ the\ given\ number\r\n
comment7.params=
comment7.target=boolean\ close()
comment7.text=\r\n\ Method\ closes\ the\ auction\ and\ displays\ what\ items\ were\ sold\ at\r\n\ what\ price\ and\ to\ who.\ It\ also\ displays\ if\ the\ item\ was\ sold\ or\ not.\r\n
comment8.params=
comment8.target=java.util.ArrayList\ getNoBids()
comment8.text=\r\n\ Method\ returns\ an\ ArrayList\ containing\ all\ the\ items\ that\ have\ \r\n\ no\ bids.\r\n\ \r\n\ @return\ an\ ArrayList\ of\ the\ Lots\ which\ currently\ have\ no\ bids\r\n
comment9.params=number
comment9.target=boolean\ removeLot(int)
comment9.text=\r\n\ Method\ removes\ a\ specified\ lot\ with\ the\ given\ lot\ number\ if\ the\ \r\n\ auction\ is\ open\ and\ the\ lot\ has\ no\ bids.\ An\ Iterator\ object\ is\ used\ \r\n\ to\ search\ the\ list\ of\ lots\ and\ when\ it\ comes\ across\ a\ matching\ lot\r\n\ number\ it\ removes\ it.\r\n\ \r\n\ @param\ number\ The\ number\ of\ the\ lot\ to\ be\ removed.\r\n
numComments=10
